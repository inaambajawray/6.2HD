pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                script {
                    // Get latest code
                    checkout scm
                    
                    // Build the code
                    echo 'Building the code...'
                    sh 'npm install'
                    sh 'npm run build'
                    
                    // Archive the build artifact to preserve it
                    archiveArtifacts artifacts: 'dist/**', allowEmptyArchive: true
                }
            }
            post {
                success {
                    echo 'Build stage successful.'
                }
                failure {
                    echo 'Build stage failed.'
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    // Run tests
                    echo 'Running tests...'
                    sh "${tool 'Maven'}/bin/mvn test"
                }
            }
            post {
                success {
                    echo 'Test stage successful.'
                }
                failure {
                    echo 'Test stage failed.'
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    // Deploy the application
                    echo 'Deploying the application...'
                   // Define URL
                    def releaseChannelUrl = 'https://api.github.com/repos/inaambajawray/6.2HD/releases'
                    def releaseData = '''
                    {
                        "tag_name": "v1.0.0",
                        "name": "Release v1.0.0",
                        "body": "This is the first release.",
                        "draft": false,
                        "prerelease": false
                    }
                    '''
            
                  // Use curl to deploy to the release channel
                  sh """
                  curl -X POST ${releaseChannelUrl} \
                 -H "Authorization: token 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" \
                 -H "Content-Type: application/json" \
                 -d '${releaseData}'
                  """
                }
            }
            post {
                success {
                    echo 'Deploy stage successful.'
                }
                failure {
                    echo 'Deploy stage failed.'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
